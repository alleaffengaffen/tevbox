---
- name: Tevbox Setup
  hosts: all
  gather_facts: false # increases speed + not needed currently
  vars:
    username: "{{ undef(hint='You must specify a username') }}"
    password: "{{ undef(hint='You must specify a password') }}"
    fqdn: "{{ undef(hint='You must specify the FQDN for this server') }}"
  tasks:
    - name: Disable ssh
      ansible.builtin.systemd:
        name: sshd
        state: stopped
        masked: true
    - name: Upgrade all packages
      ansible.builtin.apt:
        upgrade: true
        update_cache: true
    - name: Caddy GPG key is present
      ansible.builtin.get_url:
        url: https://dl.cloudsmith.io/public/caddy/stable/gpg.key
        dest: /usr/share/keyrings/caddy-stable-archive-keyring.asc
        mode: "0644"
    - name: Caddy APT repo is present
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/caddy-stable-archive-keyring.asc] https://dl.cloudsmith.io/public/caddy/stable/deb/debian any-version main"
        state: present
        filename: caddy-stable.list
        update_cache: true
        mode: "0644"
    - name: Install caddy
      ansible.builtin.apt:
        name: caddy
        state: present
    - name: Configure Caddy
      ansible.builtin.copy:
        dest: "/etc/caddy/Caddyfile"
        mode: "0644"
        content: |
          {{ fqdn }} {
            reverse_proxy 127.0.0.1:65000
          }
          8080.{{ fqdn }} {
            reverse_proxy 127.0.0.1:65000
          }
          8081.{{ fqdn }} {
            reverse_proxy 127.0.0.1:65000
          }
          9090.{{ fqdn }} {
            reverse_proxy 127.0.0.1:65000
          }
          9091.{{ fqdn }} {
            reverse_proxy 127.0.0.1:65000
          }
          3000.{{ fqdn }} {
            reverse_proxy 127.0.0.1:65000
          }
          12000.{{ fqdn }} {
            reverse_proxy 127.0.0.1:65000
          }
          http://*.{{ fqdn }} {
            reverse_proxy 127.0.0.1:65000
          }
    - name: Restart caddy # this is explicitly done to trigger caddy doing ACME challenges in the background
      ansible.builtin.systemd:
        name: caddy
        state: restarted
    - name: Admin user created
      ansible.builtin.user:
        name: "{{ username }}"
        comment: "{{ username }}"
        shell: /usr/bin/bash
        home: "/home/{{ username }}"
        groups: sudo
        password: "{{ password | password_hash('sha512', 'salt') }}"
    - name: Allow passwordless sudo
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: present
        regexp: "^%sudo"
        line: "%sudo ALL=(ALL) NOPASSWD: ALL"
        validate: "visudo -cf %s"
    - name: Download code-server install script
      ansible.builtin.get_url:
        url: https://code-server.dev/install.sh
        mode: "0777"
        dest: "/tmp/code-server-install.sh"
    - name: Install code-server
      environment:
        HOME: /root
      ansible.builtin.script: /tmp/code-server-install.sh
    - name: Start code-server
      ansible.builtin.systemd:
        name: "code-server@{{ username }}"
        state: started
        enabled: true
    - name: Wait for port 8080 to become open on the host, don't start checking for 3 seconds
      ansible.builtin.wait_for:
        host: 127.0.0.1
        port: 8080 # note a rerun of the playbook wouldnÂ´t work as then it's no longer port 8080
        delay: 3
    - name: Set code-server config
      ansible.builtin.copy:
        dest: "/home/{{ username }}/.config/code-server/config.yaml"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: "0644"
        content: |
          bind-addr: 127.0.0.1:65000
          auth: password
          password: {{ password }}
          cert: false
          proxy-domain: {{ fqdn }}
    - name: Restart code-server (to apply config)
      ansible.builtin.systemd:
        name: "code-server@{{ username }}"
        state: restarted
    - name: Install code-server extensions
      become: true
      become_user: "{{ username }}"
      ansible.builtin.command: code-server --install-extension {{ item }}
      with_items:
        - redhat.vscode-yaml
        - vscodevim.vim
        - golang.Go
        - hashicorp.terraform
        - ms-kubernetes-tools.vscode-kubernetes-tools
    - name: Configure code on code-server
      ansible.builtin.copy:
        dest: "/home/{{ username }}/.local/share/code-server/User/settings.json"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: "0644"
        content: |
          {
            "workbench.colorTheme": "Solarized Dark",
            "redhat.telemetry.enabled": false,
            "workbench.sideBar.location": "right",
            "workbench.startupEditor": "none",
            "terminal.integrated.defaultProfile.linux": "zsh",
            "explorer.confirmDragAndDrop": false
          }
    - name: Restart code-server (to apply config)
      ansible.builtin.systemd:
        name: "code-server@{{ username }}"
        state: restarted
    - name: Create code directory
      ansible.builtin.file:
        path: "/home/{{ username}}/code"
        state: directory
        mode: "0750"
        owner: "{{ username }}"
        group: "{{ username }}"
    - name: Get chezmoi install script
      ansible.builtin.get_url:
        url: https://get.chezmoi.io
        dest: "/tmp/chezmoi-install.sh"
        mode: "0777"
    - name: Install chezmoi
      become: true
      become_user: "{{ username }}"
      environment:
        BINDIR: "/home/{{ username }}/.local/bin/"
      ansible.builtin.script: /tmp/chezmoi-install.sh
    - name: Run chezmoi
      become: true
      become_user: "{{ username }}"
      ansible.builtin.script: "/home/{{ username }}/.local/bin/chezmoi init --apply {{ username }}"
      failed_when: false # since this could likely fail, we always accept it as is

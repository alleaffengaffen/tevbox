name: Delete a box

on:
  workflow_dispatch:
    inputs:
      hostname:
        type: string
        default: ""
        description: Hostname of the box

env:
  STATE_BUCKET: "tevbox-state"
  STATE_BUCKET_REGION: "eu-west-1" 

jobs:
  terraform:
    name: "Terraform Run"
    runs-on: ubuntu-latest
    permissions: 
      id-token: write
      contents: read
    env:
      TF_VAR_hostname: ${{ github.event.inputs.hostname }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::141091412313:role/tevbox-role
          role-session-name: tevbox
          aws-region: ${{ env.STATE_BUCKET_REGION }}
      - name: Fetch secrets from AKeyless
        id: fetch-secrets
        uses: LanceMcCarthy/akeyless-action@v3
        with:
          access-id: ${{ secrets.AKEYLESS_ACCESS_ID }}
          static-secrets: |
            {
              "/actions/tevbox/hcloud_token":"TF_VAR_hcloud_token",
              "/actions/tevbox/hetzner_dns_token":"TF_VAR_hetzner_dns_token"
            }
      - name: Create Terraform backend configuration
        run: |
          tee s3.tfbackend << END
            bucket = "${{ env.STATE_BUCKET }}"
            key    = "${{ github.event.inputs.hostname }}"
            region = "${{ env.STATE_BUCKET_REGION }}"
          END
      - name: Grab variables file from s3
        run: aws s3 mv s3://${{ env.STATE_BUCKET }}/${{ github.event.inputs.hostname}}.tfvars ${{ github.event.inputs.hostname }}.tfvars
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.3
          terraform_wrapper: false
      - name: Terraform Init
        id: init
        run: terraform init -backend-config=s3.tfbackend
      - name: Terraform Apply 
        run: terraform destroy -auto-approve -input=false -var-file ${{ github.event.inputs.hostname }}.tfvars
      - name: Delete state
        run: aws s3 rm s3://${{ env.STATE_BUCKET }}/${{ github.event.inputs.hostname }}
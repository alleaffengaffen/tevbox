name: Hcloud instance

on:
  workflow_dispatch:
    inputs:
      hostname:
        type: string
        required: true
        description: Hostname of the box
      password:
        type: string
        description: Password for the code-server
      type:
        type: choice
        default: cax11
        options:
          - cx11
          - cpx11
          - cx21
          - cpx21
          - cx31
          - cpx31
          - cx41
          - cpx41
          - cx51
          - cpx51
          - cax11
          - cax21
          - cax31
          - cax41
        description: Size of the box to create (cax=arm64)
      location:
        type: choice
        default: hel1
        options:
          - hel1
          - fsn1
          - nbg1
          - ash
          - hil
        description: Location of the box
      destroy:
        type: boolean
        description: Shall the box be destroyed?

jobs:
  terraform:
    name: "tevbox..."
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      STATE_BUCKET: "gh-tevbox"
      STATE_BUCKET_REGION: "eu-west-1"
      TF_VAR_hcloud_token: ${{ secrets.HCLOUD_TOKEN }}
      TF_VAR_hetzner_dns_token: ${{ secrets.HETZNER_DNS_TOKEN }}
      TF_VAR_tailscale_api_key: ${{ secrets.TAILSCALE_API_KEY }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::351425708426:role/gh-tevbox
          role-session-name: tevbox
          aws-region: ${{ env.STATE_BUCKET_REGION }}
      - name: create Terraform backend configuration
        run: |
          tee hcloud/s3.tfbackend << END
            key    = "${{ github.event.inputs.hostname }}"
            bucket = "${{ env.STATE_BUCKET }}"
            region = "${{ env.STATE_BUCKET_REGION }}"
          END
      - name: create variables file
        if: ${{ github.event.inputs.destory == false }}
        run: |
          tee hcloud/${{ github.event.inputs.hostname }}.tfvars << END
            hostname   = "${{ github.event.inputs.hostname }}"
            password   = "${{ github.event.inputs.password }}"
            type       = "${{ github.event.inputs.type }}"
            location   = "${{ github.event.inputs.location }}"
            revision   = "${GITHUB_REF##*/}"
            username   = "${{ github.actor }}"
          END
      - name: save variables file to s3
        if: ${{ github.event.inputs.destory == false }}
        run: aws s3 cp hcloud/${{ github.event.inputs.hostname }}.tfvars s3://${{ env.STATE_BUCKET }}/${{ github.event.inputs.hostname}}.tfvars
      - name: grab variables file from s3
        if: ${{ github.event.inputs.destory == true }}
        run: aws s3 mv s3://${{ env.STATE_BUCKET }}/${{ github.event.inputs.hostname}}.tfvars hcloud/${{ github.event.inputs.hostname }}.tfvars
      - name: setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.6
          terraform_wrapper: false
      - name: terraform init
        id: init
        run: terraform -chdir=hcloud init  -backend-config=s3.tfbackend
      - name: terraform apply
        if: ${{ github.event.inputs.destory == false }}
        run: terraform -chdir=hcloud apply -auto-approve -input=false -var-file ${{ github.event.inputs.hostname }}.tfvars
      - name: terraform Output
        run: |
          terraform -chdir=hcloud output > $GITHUB_STEP_SUMMARY
      - name: terraform destroy
        if: ${{ github.event.inputs.destory == true }}
        # env:
        # TF_VAR_hostname: ${{ github.event.inputs.hostname }}
        run: terraform -chdir=hcloud destroy  -auto-approve -input=false -var-file ${{ github.event.inputs.hostname }}.tfvars
      - name: delete state
        if: ${{ github.event.inputs.destory == true }}
        run: aws s3 rm s3://${{ env.STATE_BUCKET }}/${{ github.event.inputs.hostname }}
